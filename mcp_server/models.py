# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T00:34:26+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class SerpData(BaseModel):
    query: str = Field(..., title='Query')
    website: str = Field(..., title='Website')


class ValidationError(BaseModel):
    loc: List[str] = Field(..., title='Location')
    msg: str = Field(..., title='Message')
    type: str = Field(..., title='Error Type')


class FieldDatamodelCodeGeneratorRootSpecialGetResponse(BaseModel):
    status: Optional[bool] = None


class V1CrawlQueryGetResponse(BaseModel):
    answer: Optional[str] = None
    results: Optional[List[str]] = None
    total: Optional[str] = None


class Image(BaseModel):
    alt: Optional[str] = None
    src: Optional[str] = None


class Link(BaseModel):
    domain: Optional[str] = None
    href: Optional[str] = None
    title: Optional[str] = None


class ImageResult(BaseModel):
    image: Optional[Image] = None
    link: Optional[Link] = None


class V1ImagesQueryGetResponse(BaseModel):
    answers: Optional[List[str]] = None
    image_results: Optional[List[ImageResult]] = None
    results: Optional[List[Dict[str, Any]]] = None
    total: Optional[int] = None


class Entry(BaseModel):
    guidislink: Optional[str] = None
    id: Optional[str] = None
    link: Optional[str] = None
    links: Optional[str] = None
    published: Optional[str] = None
    published_parsed: Optional[str] = None
    source: Optional[str] = None
    sub_articles: Optional[str] = None
    summary: Optional[str] = None
    summary_detail: Optional[str] = None
    title: Optional[str] = None
    title_detail: Optional[str] = None


class Feed(BaseModel):
    generator: Optional[str] = None
    generator_detail: Optional[str] = None
    language: Optional[str] = None
    link: Optional[str] = None
    links: Optional[str] = None
    publisher: Optional[str] = None
    publisher_detail: Optional[str] = None
    rights: Optional[str] = None
    rights_detail: Optional[str] = None
    subtitle: Optional[str] = None
    subtitle_detail: Optional[str] = None
    title: Optional[str] = None
    updated: Optional[str] = None
    updated_parsed: Optional[str] = None


class V1NewsQueryGetResponse(BaseModel):
    entries: Optional[List[Entry]] = None
    feed: Optional[Feed] = None


class Result(BaseModel):
    description: Optional[str] = None
    link: Optional[str] = None
    title: Optional[str] = None


class V1SearchQueryGetResponse(BaseModel):
    answer: Optional[str] = None
    results: Optional[List[Result]] = None
    total: Optional[str] = None


class V1SerpPostResponse(BaseModel):
    position: Optional[int] = None
    query: Optional[str] = None
    searched_results: Optional[int] = None
    website: Optional[str] = None


class HTTPValidationError(BaseModel):
    detail: Optional[List[ValidationError]] = Field(None, title='Detail')
